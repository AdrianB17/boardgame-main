name: Java CI with Maven & Build and Deploy to ECS

on:
  push:
    branches:
      - main
    paths:
      - '**'
  pull_request:
    branches:
      - main
    paths:
      - '**'

jobs:
  setup:
    name: Checkout and Setup
    runs-on: ubuntu-22.04
    outputs:
      ref: ${{ steps.set-ref.outputs.ref }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.client_payload.ref }}

      - name: Set ref output
        id: set-ref
        run: echo "ref=${GITHUB_REF}" >> $GITHUB_OUTPUT

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

  test-and-analyze:
    name: Build, Test, and Analyze with SonarCloud
    runs-on: ubuntu-22.04
    needs: setup

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build, Test and SonarCloud Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=AdrianB17_boardgame-main \
            -Dsonar.organization=adrianb17 \
            -Dsonar.host.url=https://sonarcloud.io

  build-and-push-image:
    name: Build and Push Docker Image to Amazon ECR
    runs-on: ubuntu-22.04
    needs: test-and-analyze
    env:
      ENV: dev

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, Tag, and Push Docker Image to ECR
        id: build-push-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: belcorp-0000-demo-${{ env.ENV }}-images-repository
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  trigger-ecs:
    name: Trigger ECS Deployment
    runs-on: ubuntu-22.04
    needs: build-and-push-image
    steps:
      - name: Trigger ECS Deployment Workflow
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          event-type: code-deploy-ecs-event
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'
